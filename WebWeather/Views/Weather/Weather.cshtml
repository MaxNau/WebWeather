@model List<List<WebWeather.ViewModels.ClimateIndicators>>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    ViewBag.Title = "Weather";
}

<div class="tab-control">
    <ul>
        @{
            foreach (var item in Model)
            {
                <li>
                    <a>
                        <div>
                            <p>@item[0].Date.ToShortDateString()</p>
                            <p>@item.Select(x => x.Atmospheric.Temperature.Min).Min()</p>
                            <p>@item.Select(x => x.Atmospheric.Temperature.Max).Max()</p>
                        </div>
                    </a>
                </li>
            }
        }
    </ul>
    <div class="tabs-container">
        @{
            int xx = 1;
            int j = 0;
            foreach (var item in Model)
            {
                    <div id="@string.Format("fragment-x{0}", xx)">
                            <div class="myslider">
                                    <div class="myslidertrack">

                                        @{  
                                            string cla;
                                            foreach (var wea in item)
                                            {
                                                if (j == 0 || j == 1)
                                                {
                                                    cla = "slide-active";
                                                }
                                                else
                                                {
                                                    cla = "slide-notactive";
                                                }

                                                <div class="myslide @cla" data-slide-index="@(j + 1)">
                                                    <br />
                                                    <p>
                                                        @wea.Date.ToString("HH:mm");
                                                    </p>
                                                    <p>
                                                        <b>Temperature: </b> @wea.Atmospheric.Temperature.Current
                                                    </p>
                                                    <p>
                                                        <b>Clouds: </b>@wea.Atmospheric.Cloudiness
                                                    </p>
                                                    <p>
                                                        <b>Humidity: </b>@wea.Atmospheric.Humidity
                                                    </p>
                                                    <p>
                                                        @wea.Atmospheric.Pressure
                                                    </p>
                                                    <p>
                                                        <b>Snow: </b>@wea.Atmospheric.Snow
                                                    </p>
                                                    <br />

                                                </div>
                                                j++;
                                            }
                                            }
      
                                </div>
                            </div>
                        </div>
                                                j = 0;
                                                xx++;
                                            }
            }
    </div>
</div>


<div id="tabs" class="test">
    <ul>
        @{
            int i = 0;
            foreach (var item in Model)
            {
                <li>
                    <a href="#fragment-@i">
                        <div> asdasd</div>
                        <div>
                            <p>@item[0].Date.ToShortDateString()</p>
                            <p>@item.Select(x => x.Atmospheric.Temperature.Min).Min()</p>
                            <p>@item.Select(x => x.Atmospheric.Temperature.Max).Max()</p>
                        </div>
                    </a>

                </li>

                i++;
            }
        }
    </ul>
    @{
        i = 0;
        foreach (var item in Model)
        {
            <div id="fragment-@i">

                @*<p> Hourly forecast on @item[i].Date.ToShortDateString() </p>*@
                <div class="slider-container">
                    <div class="multiple-items-@i">
                        @foreach (var wea in item)
                        {
                            <div>
                                <br />
                                <p>
                                    @wea.Date.ToString("HH:mm");
                                </p>
                                <p>
                                    <b>Temperature: </b> @wea.Atmospheric.Temperature.Current
                                </p>
                                <p>
                                    <b>Clouds: </b>@wea.Atmospheric.Cloudiness
                                </p>
                                <p>
                                    <b>Humidity: </b>@wea.Atmospheric.Humidity
                                </p>
                                <p>
                                    @wea.Atmospheric.Pressure
                                </p>
                                <p>
                                    <b>Snow: </b>@wea.Atmospheric.Snow
                                </p>
                                <br />
                            </div>
                        }
                    </div>
                </div>
            </div>
            i++;
        }
    }

</div>
<script>
    //$(document).ready(function () {
    //    $("#tabs").tabs({
    //        beforeActivate: function (event, ui) {
    //            slick(ui.newTab.index());
    //        }
    //    });
    //});

    //var currentFragment;
    //slick(0);

    //function prev() {
    //    currentFragment = document.getElementsByClassName("fragment-active");
    //    var id = currentFragment[0].id.substring('f-'.length);
    //    var slidertrack = document.getElementById("myslidertrack-" + currentFragment[0].id.substring('f-'.length));
    //    var slides = slidertrack.getElementsByTagName("div");
    //    var activeSlides = slidertrack.getElementsByClassName("slide-active");
    //    var activeSlidesArr = Array.from(activeSlides);
    //    var index = activeSlidesArr[0].dataset.slideIndex - 1;
    //    if (index - 1 >= 0) {
    //        activeSlidesArr[activeSlidesArr.length - 1].classList.remove("slide-active");
    //        activeSlidesArr[activeSlidesArr.length - 1].classList.add("slide-notactive");
    //        slides[index - 1].classList.remove("slide-notactive");
    //        slides[index - 1].classList.add("slide-active");
    //    }
    //    else {

    //    }
    //}

    //function next() {
    //    currentFragment = document.getElementsByClassName("fragment-active");
    //    var slidertrack = document.getElementById("myslidertrack-" + currentFragment[0].id.substring('f-'.length));
    //    var slides = slidertrack.getElementsByTagName("div");
    //    var activeSlides = slidertrack.getElementsByClassName("slide-active");
    //    var activeSlidesArr = Array.from(activeSlides);
    //    var index = activeSlidesArr[1].dataset.slideIndex - 1;
    //    if ((parseInt(index) + 1) < (slides.length)) {
    //        if (index <= 2) {
    //            slides[index - 1].classList.remove("slide-active");
    //            slides[index - 1].classList.add("slide-notactive");
    //            slides[index + 1].classList.remove("slide-notactive");
    //            slides[index + 1].classList.add("slide-active");
    //            $(slides[index + 1]).fadeOut(50);
    //            $(slides[index + 1]).fadeIn(1000);
    //            $(slides[index]).fadeOut(50);
    //            $(slides[index]).fadeIn(1000);
    //        }
    //        else {
    //            slides[index - 1].classList.remove("slide-active");
    //            slides[index - 1].classList.add("slide-notactive");
    //            slides[index + 1].classList.remove("slide-notactive");
    //            slides[index + 1].classList.add("slide-active");
    //            $(slides[index + 1]).fadeOut(50);
    //            $(slides[index + 1]).fadeIn(1000);
    //            $(slides[index]).fadeOut(50);
    //            $(slides[index]).fadeIn(1000);
    //        }
    //    }
    //    else {

    //    }
    //}

    //function slick(index) {
    //    $('.multiple-items-' + index).not('.slick-initialized').slick({
    //        infinite: false,
    //        slidesToShow: 4,
    //        slidesToScroll: 1
    //    });
    //    $('.multiple-items-' + index).slick('slickGoTo', 0);
    //}

    //var tab = document.getElementsByClassName("tab-control");
    //var ul = tab[0].getElementsByTagName("ul");
    //var items = ul[0].getElementsByTagName("li");
    //var arr = Array.from(items);
    //var lastClicked;
    //var lastFragment;
    

    //var r = Math.max.apply(Math, arr.map(function (o) { return o.clientHeight; }))

    //for (i = 0; i < arr.length; i++) {
    //    arr[i].style.height = r + "px";
    //}
    //var handle = function callback(e) {
    //    var e = window.e || e;

    //    if (e.target.tagName !== 'LI')
    //        return;

    //    e.target.classList.add("tab-active");
    //    var fragment = document.getElementById("f-" + e.target.id);

    //    fragment.classList.add("fragment-active");

    //    if (lastClicked) {
    //        if (lastClicked.id != e.target.id) {
    //            lastClicked.classList.remove("tab-active");
    //            lastFragment.classList.remove("fragment-active");
    //            lastClicked = e.target;
    //            lastFragment = fragment;
    //        }
    //    }
    //    else {
    //        lastFragment = fragment;
    //        lastClicked = e.target;
    //    }
    //}

    //if (document.addEventListener)
    //    document.addEventListener('click', handle, false);
    //else
    //    document.attachEvent('onclick', handle);
    tabControl.initialize();
    carousel.inidialize();
</script>

<script>
    var tab = document.getElementsByClassName("tab-control");
    //var ul = tab.getElementsByTagName("ul");
    //var items = ul.getElementsByTagName("li");
</script>

